---
--- 在zset中更新某元素并同时删除多个元素
--- Generated by Luanalysis
--- Created by Tian.
--- DateTime: 2023/4/5 18:18
---

-- 参数列表
local listKey = KEYS[1];
local t = ARGV[2];
-- 操作类型, update为更新, delete为删除
local op = ARGV[3];
--通过os库下的time函数来获取时间戳(根据year=?,month=?,day=?,hour=?,minute=?,second=?获取或者直接获取然后最后返回timestamp到java中)

-- 是否执行了清空操作,true为执行,false为未执行
--local isEmpty = ARGV[1];
-- 更新操作需要删除的键名pattern,符合该pattern的key都会被删除,格式:*pattern*
--local delKeysPattern = ARGV[4];
--local expireTime = ARGV[5];
--local timeStamp = ARGV[6];
-- 1.判断是否执行了清空操作,传入参数yes代表执行了清空操作,no代表没有执行
if (ARGV[1] == "no") then
    -- 2.没有执行清空操作,代表redis中有该key
    -- 判断操作类型
    if (op == "update" or op == "insert") then
        -- 2.1 是更新或添加,将现在的timestamp赋给zset中list对应的score
        redis.call("zadd",listKey, tonumber(ARGV[6]), t);
    elseif (op == "delete") then
        -- 2.2 是删除,将zset中该id删除
        redis.call("zrem",listKey, t);
    else
        return false;
    end

    -- 添加,更新和删除均需要重新设置过期时间
    redis.call("expire", listKey, ARGV[5]);
end
-- 执行了清空操作,则对该zsetkey不需做任何操作,只需将相关的key缓存数据删除即可
-- 判断操作类型
if(op ~= "insert") then
    -- 不是add则需要删除所有相关键
    -- 3.删除所有需要删除的Key
    local delKeys = redis.call("keys", ARGV[4])
    for i, v in ipairs(delKeys) do
        redis.call("del", v);
    end
end
-- 是add,代表cache中应没有此数据缓存,所以也不需要删除
return true;